services:
  reverse-proxy:
    container_name: reverse-proxy
    image: nginx:1.29.0
    ports:
      - "443:443"
    volumes:
      - /etc/letsencrypt/live/<hostname>/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
      - /etc/letsencrypt/live/<hostname>/privkey.pem:/etc/nginx/ssl/privkey.pem:ro
      - ./auth/internal-ca.crt:/etc/nginx/ssl/internal-ca.crt:ro
      - ./auth/htpasswd-upload:/etc/nginx/htpasswd-upload:ro
      - ./config/reverse-proxy.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      test:
        ["CMD-SHELL", "curl -s --insecure https://localhost/ | grep -q '<html'"]
      interval: 5s
      timeout: 3s
      retries: 100
      start_period: 30s
    depends_on:
      - frontend
      - backend
    networks:
      - kant-search-network

  frontend:
    container_name: frontend
    image: ghcr.io/frhorschig/kant-search-frontend:0.8.0
    volumes:
      - ./auth/frontend.crt:/etc/nginx/ssl/frontend.crt:ro
      - ./auth/frontend.key:/etc/nginx/ssl/frontend.key:ro
      - ./config/frontend/config.json:/usr/share/nginx/html/assets/config.json:ro
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --insecure https://localhost/index.html | grep -q '<title'",
        ]
      interval: 5s
      timeout: 3s
      retries: 100
      start_period: 30s
    depends_on:
      - backend
    networks:
      - kant-search-network

  backend:
    container_name: backend
    image: ghcr.io/frhorschig/kant-search-backend:0.8.0
    volumes:
      - ./config/backend:/app/config:ro
      - ./auth:/app/certs:ro
    environment:
      - KSDB_URL=https://elasticsearch
      - KSDB_PORT=9200
      - KSDB_USERNAME=elastic
      - KSDB_PASSWORD=${KSDB_PASSWORD}
      - KSDB_CERT=/app/certs/internal-ca.crt
      - KSGO_RETRY_COUNT=100
      - KSGO_RETRY_INTERVAL=5
      - KSGO_CONFIG_PATH=/app/config
      - KSGO_CERT=/app/certs/backend.crt
      - KSGO_KEY=/app/certs/backend.key
      - KSGO_ALLOW_ORIGINS=<hostname>
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cert /app/certs/backend.crt --key /app/certs/backend.key --cacert /app/certs/internal-ca.crt https://localhost:443/health | grep -q 'UP'",
        ]
      interval: 5s
      timeout: 3s
      retries: 100
      start_period: 30s
    depends_on:
      - elasticsearch
    networks:
      - kant-search-network

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.4
    volumes:
      - ./elastic-data:/usr/share/elasticsearch/data
      - ./auth:/usr/share/elasticsearch/config/certs:ro
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${KSDB_PASSWORD}
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/elasticsearch.key
      - xpack.security.http.ssl.certificate=certs/elasticsearch.crt
      - xpack.security.http.ssl.certificate_authorities=certs/internal-ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/elasticsearch.key
      - xpack.security.transport.ssl.certificate=certs/elasticsearch.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/internal-ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/internal-ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 5s
      timeout: 3s
      retries: 100
      start_period: 30s
    networks:
      - kant-search-network

networks:
  kant-search-network:
    driver: bridge
